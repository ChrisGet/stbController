<?xml version="1.0" encoding="utf-8" ?>
<nlog 
  xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  autoReload="true">

  <!-- 
  See http://nlog-project.org/wiki/Configuration_file 
  for information on customizing logging rules and outputs.
   -->

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <targets>
    <target name="consoleLog" xsi:type="ColoredConsole" useDefaultRowHighlightingRules="false" layout="${message} ${exception:format=message}" >
      <highlight-row condition="level == LogLevel.Trace" foregroundColor="Green" />
      <highlight-row condition="level == LogLevel.Debug" foregroundColor="Magenta" />
      <highlight-row condition="level == LogLevel.Info" foregroundColor="White" />
      <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
      <highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
      <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
    </target>
    <target
      name="fileLog"
      xsi:type="File"
      fileName="logs/redrathub.log"
      layout="[${date:format=yyyy-MM-dd HH\:mm\:ss}] ${level} ${message} ${exception:format=message}"
      archiveFileName="logs/archive/redrathub_{##}.log"
      archiveAboveSize="10240000"
      maxArchiveFiles="10"
      archiveNumbering="Rolling"
      archiveEvery="Day"
      archiveOldFileOnStartup="true"
      concurrentWrites="false"
      keepFileOpen="true"
      openFileCacheTimeout="30" />
    <target name="webLog" xsi:type="MethodCall" className="RedRat.RedRatHub.Http.MemoryLogger, RedRatHub" methodName="Log">
      <parameter layout="${date:format=yyyy-MM-dd HH\:mm\:ss}" />
      <parameter layout="${level}" />
      <parameter layout="${message} ${exception:format=message}" />
    </target>
  </targets>

  <rules>
    <!--
    In this section, log output can be enabled/disabled, and the log level set.    
    The 'minLevel' parameter should be set to one of Fatal, Error, Warn, Info, Debug or Trace.    
    For example, when set to 'Info', then Fatal, Error, Warn and Info log messages willbe shown.
    -->
    <!--Skip non-critical Microsoft ASP.NET Core logs and so log only own logs -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />

    <!-- Console logging. -->
    <logger name="*" minlevel="Debug" writeTo="consoleLog" />

    <!-- File logging. Uncomment the line below to enable. -->
    <logger name="*" minlevel="Debug" writeTo="fileLog" />

    <!-- Logging to Windows event log. Uncomment the line below to enable. It is only used when running as a Windows Service. -->
    <!-- <logger name="*" minlevel="Warn" writeTo="eventLog" /> -->

    <!-- Log capture for the Web UI. -->
    <logger name="*" minlevel="Debug" writeTo="webLog" />
  </rules>
</nlog>